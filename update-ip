#!/bin/bash

# Updates the linode domain record target. The domain record
# is looked up by name (read from .env). 
# If the current IP has not changed since last run, no actions are taken.

source .env

base_url=https://api.linode.com/v4
state_file=.state

get_previous_ip() {
	if [ -e $state_file ]; then
		cat $state_file
	fi
}

# backup: https://checkip.amazonaws.com
IP=$(curl --silent https://api4.ipify.org/)

if [[ ! $IP =~ ^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$ ]]; then
	echo "Invalid looking IP: $IP" >&2
	exit 1
fi

previous_ip=$(get_previous_ip)

if [ "$IP" = "$previous_ip" ]; then
	echo "IP unchanged ($IP)" >&2
	exit
fi

echo "Updating ip address from $previous_ip to $IP" >&2

read domainId domainRecordId <<< $(./get-domain-record $DOMAIN_NAME $DOMAIN_RECORD_NAME)

if [ "" = "$domainRecordId" ]; then
	echo Cound not find domain and record name. Check output or .env file.
	exit 1
fi

# cat <<JSON
# set -x
./lido PUT domains/$domainId/records/$domainRecordId <<JSON
{
	"target": "${IP}"
}
JSON

# TODO check for HTTP status errors and don't update
echo $IP > $state_file